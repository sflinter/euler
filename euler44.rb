#!/usr/bin/env ruby

# Pentagonal numbers are generated by the formula,
# P_(n)=n(3n-1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P_(4) + P_(7) = 22 + 70 = 92 = P_(8). However,
# their difference, 70 - 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, P_(j) and P_(k), for which
# their sum and difference is pentagonal and D = |P_(k) - P_(j)| is
# minimised; what is the value of D?

require 'int'
require '../ruby/bst'

def timed
  t = Time.now
  yield
  Time.now - t
end

pents = (1..10000).map { |n| n.p }

puts timed { pents.bst2_include?(1000000) }
puts timed { pents.bst2_include?(38999999999999) }


pents_shift = pents
(1..pents_shift.length).each do |i|
  p i if i % 10 == 0
  n1 = pents_shift.shift
  pents_shift.each do |n2|
    if (pents.bst2_include?(n1+n2)) && (pents.bst2_include?((n1-n2).abs))
      puts "n1: #{n1} n2: #{n2} D: #{(n1-n2).abs}"
    end
  end
end

